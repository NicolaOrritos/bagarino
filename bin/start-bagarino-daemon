#!/usr/bin/env node

'use strict';


// Parsing some options:
const docopt = require('docopt').docopt;

const options = 'Start/configure the bagarino daemon or perform a Garbage Collection of stale tickets \n'
              + ' \n'
              + 'Usage: \n'
              + '  bagarino [--dev] \n'
              + '  bagarino gc \n'
              + '  bagarino gcv \n'
              + '  bagarino initconf \n'
              + '  bagarino -h | --help \n'
              + ' \n'
              + 'Options: \n'
              + '  gc          Perform a Garbage Collection of stale tickets without starting the daemon \n'
              + '  gcv         Perform Garbage Collection and be verbose about it (without starting the daemon) \n'
              + '  initconf    Create (or replace) the configuration file "/etc/bagarino.conf" without starting the daemon \n'
              + '  --dev       Starts bagarino in development-mode, spawning only a worker \n'
              + '  --h --help  Show this help \n';

const cmd = docopt(options);


if (cmd && (cmd['gc'] || cmd['gcv']))
{
    const gc = require('../lib/gc.js');

    const verbose = cmd['gcv'] ? true : false;

    gc.run(verbose)
    .then( count =>
    {
        console.log('Garbage Collection performed correctly.');
        console.log('%s stale ticket(s) cleaned.', count);

        process.exit();
    })
    .catch( err =>
    {
        console.log('Could not perform Garbage Collection. %s', err.stack);

        process.exit(1);
    });
}
else if (cmd && cmd['initconf'])
{
    const fs = require('fs');

    const readStream  = fs.createReadStream(__dirname + '/../etc/bagarino.conf');
    const writeStream = fs.createWriteStream('/etc/bagarino.conf');

    readStream.on('end', () =>
    {
        console.log('Created file "/etc/bagarino.conf"');

        process.exit();
    });

    readStream.on( 'error', err => console.log('Error initializing the configuration. %s', err) );
    writeStream.on('error', err => console.log('Error initializing the configuration. %s', err) );

    readStream.pipe(writeStream);
}
else
{
    const probiotic = require('probiotic');
    const CONF      = require(__dirname + '/../lib/conf');

    const devMode  = (cmd['--dev']) || (CONF.ENVIRONMENT === 'development') ? true : false;
    const workers  = devMode ? 1 : 'auto';

    probiotic.run({
        name: 'bagarino',
        main: '../app.js',
        workers: workers
    });
}
