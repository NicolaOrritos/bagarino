#!/usr/bin/env node

'use strict';


const fs = require('fs');


// Parsing some options:
const docopt = require('docopt').docopt;

const options = 'Start the bagarino daemon or perform a Garbage Collection of stale tickets \n'
              + ' \n'
              + 'Usage: \n'
              + '  bagarino [gc | gcv] [--dev] \n'
              + '  bagarino initconf \n'
              + '  bagarino -h | --help \n'
              + ' \n'
              + 'Options: \n'
              + '  gc          Perform a Garbage Collection of stale tickets \n'
              + '  gcv         Perform Garbage Collection and be verbose about it \n'
              + '  initconf    Create (or replace) the configuration file "/etc/bagarino.conf" \n'
              + '  --h --help  Show this help \n';

const cmd = docopt(options);


if (cmd && (cmd['gc'] || cmd['gcv']))
{
    const gc = require('../lib/gc.js');

    const verbose = cmd['gcv'] ? true : false;

    gc.run(verbose)
    .then( count =>
    {
        console.log('Garbage Collection performed correctly.');
        console.log('%s stale ticket(s) cleaned.', count);

        process.exit();
    })
    .catch( err =>
    {
        console.log('Could not perform Garbage Collection. %s', err.stack);

        process.exit(1);
    });
}
else if (cmd && cmd['initconf'])
{
    const readStream  = fs.createReadStream('../etc/bagarino.conf');
    const writeStream = fs.createWriteStream('/etc/bagarino.conf');

    readStream.pipe(writeStream);

    console.log('Created file "/etc/bagarino.conf"');

    process.exit();
}
else
{
    const progenic = require('progenic');
    const CONF     = require(__dirname + '/../lib/conf');

    const devMode  = (cmd['--dev']) || (CONF.ENVIRONMENT === 'development') ? true : false;
    const workers  = devMode ? 1 : 'auto';

    progenic.run({
        name: 'bagarino',
        main: '../app.js',
        workers: workers,
        devMode: devMode
    });
}
